# Node.js React Web App to Linux on Azure
# Build a Node.js React app and deploy it to Azure as a Linux web app.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- main

variables:

  # Azure Resource Manager connection created during pipeline creation
  azureSubscription: 'f388291a-fff9-47fc-994c-dcee0bf64bbe'

  # Web app name
  webAppName: 'fronend'

  # Environment name
  environmentName: 'fronend'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'
  directory: '$(System.DefaultWorkingDirectory)'
  stage: development
  serviceConnection: REACT_AZURE_DEMO
  appServiceName: reactazuredemo

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)

    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '16.x'
      displayName: 'Install Node.js'
    
    - script: 
        npm install
      displayName: 'npm install'
      workingDirectory: $(directory)
    
    - script: 
       npm run build
      displayName: 'npm build'
      workingDirectory: $(directory)
    
    - task: CopyFiles@2
      displayName: 'Copy files'
      inputs:
        sourceFolder: '$(directory)/build' 
        Contents: '**/*'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'
        cleanTargetFolder: true
    
    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(Build.ArtifactStagingDirectory)'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true
    
    - task: PublishBuildArtifacts@1
      displayName: 'Publish Build Artifacts'
      inputs: 
        pathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: Deploy
    displayName: Deploy
    environment: $(environmentName)
    strategy:
      runOnce:
        deploy:
          steps:
                - checkout: none
                - task: DownloadPipelineArtifact@2
                  displayName: 'Download Pipeline Artifact'
                  inputs:
                    buildType: 'current'
                    artifactName: 'drop'
                    targetPath: $(Build.ArtifactStagingDirectory)

                - task: AzureWebApp@1
                  displayName: 'Azure App Service Deploy: React front end'
                  inputs:
                    azureSubscription: 'Suscripción de Visual Studio Professional (42b98f39-1c88-4895-874a-9c4f440839bb)'
                    appType: 'webAppLinux'
                    appName: 'fronend'
                    package: '$(System.DefaultWorkingDirectory)/*.zip'

                  